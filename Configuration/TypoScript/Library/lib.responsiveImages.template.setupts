##################################
## Layout from template         ##
##################################

# NOTE: setup column width in fluid templates
# <f:cObject typoscriptObjectPath="lib.dymanicContent" data="{col_md: '9'}" />

# FluidTemplate vars : 
# @ col_xs, sm, md, lg, xl : integer, number of columns 
# @ fluid : boolean, set to 1 on layouts without .container   

# Behiavour of breakpoints
# fluid -> make image size the screen size max for the breakpoint
# fixed -> make image size the width of container for current breakpoint

lib.responsiveImages.temp {
    
    width = COA
    width {
        
        10 = TEXT
        10.wrap = (|+{$plugin.lef_responsive_images.gutter})/{$plugin.lef_responsive_images.columns}*
        10.override.if {
            isLessThan.ifEmpty = 0                
            value = 1
            negate = 1
        }
        20 = TEXT
        
    }
}


lib.dynamicContent.5 {
    
    registerDepth{
        cObject = TEXT
        cObject.data = register:registerDepth
        cObject.wrap = |+1
        prioriCalc = 1
    }
    
    # Container behiavour   
    fluid{
        cObject = TEXT
        cObject{
            value = 0
            override.field = fluid
        }
    }
    
    # Number of columns, auto propagate from lower to bigger
    
    columns_xs{
        cObject = TEXT
        cObject{
            value = {$plugin.lef_responsive_images.columns}
            override.field = col_xs
        }
    }
    columns_sm{
        cObject = TEXT
        cObject{
            data = register:columns_xs
            override.field = col_sm
        }
    }
    columns_md{
        cObject = TEXT
        cObject{
            data = register:columns_sm
            override.field = col_md
        }
    }
    columns_lg{
        cObject = TEXT
        cObject{
            data = register:columns_md
            override.field = col_lg
        }
    }
    
    
    # Available width
    width_xxs {
        cObject =< lib.responsiveImages.temp.width
        cObject{
            10.value = {$plugin.lef_responsive_images.container.xs}
            20.data = register:columns_xs
        }
        prioriCalc = 1
    }
    
    width_xs {
        cObject =< lib.responsiveImages.temp.width
        cObject{
            10.value    = {$plugin.lef_responsive_images.container.xs}
            10.override = {$plugin.lef_responsive_images.container.sm}
            10.override.if{
                isFalse = {$plugin.lef_responsive_images.fluid.xs}
                isLessThan.field = fluid 
            }
            20.data = register:columns_xs           
        }
        prioriCalc = 1
    }
    
    width_sm {
        cObject =< lib.responsiveImages.temp.width
        cObject{
            10.value    = {$plugin.lef_responsive_images.container.sm}
            10.override = {$plugin.lef_responsive_images.container.md}
            10.override.if{
                isFalse = {$plugin.lef_responsive_images.fluid.sm}
                isLessThan.field = fluid 
            }
            20.data = register:columns_sm
        }
        prioriCalc = 1
    }    
    
    width_md {
        cObject =< lib.responsiveImages.temp.width
        cObject{
            10.value    = {$plugin.lef_responsive_images.container.md}
            10.override = {$plugin.lef_responsive_images.container.lg}
            10.override.if{
                isFalse = {$plugin.lef_responsive_images.fluid.md}
                isLessThan.field = fluid 
            }
            20.data = register:columns_md 
        }
        prioriCalc = 1
    }
    
    width_lg {
        cObject =< lib.responsiveImages.temp.width
        cObject{
            10.value    = {$plugin.lef_responsive_images.container.lg}
            10.override = {$plugin.lef_responsive_images.container.xl}
            10.override.if{
                isFalse = {$plugin.lef_responsive_images.fluid.lg}
                isLessThan.field = fluid 
            }
            20.data = register:columns_lg
        }
        prioriCalc = 1
    }
    
}